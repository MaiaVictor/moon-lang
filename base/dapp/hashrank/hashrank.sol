pragma solidity ^0.4.0;

// This allows stakeholders to approve an IPFS hash, and can return the
// weighted sum of ether that approved it. Used for rank & anti-phishing.

contract HashRank {
  // Who approved this hash
  mapping (uint256 => address[]) approved;
  
  // Entries
  bytes[] entryHashes;
  bytes[] entryNames;
  bytes[] entryDescs;

  
  // Registers a hash
  function register(bytes hash, bytes name, bytes desc) public {
    entryHashes.push(hash);
    entryNames.push(name);
    entryDescs.push(desc);
  }
  
  // Approves an entry
  function approve(uint256 index) public {
    approved[index].push(msg.sender);
  }
  
  // Computes the rank (eth-weighted sum of approvals) of the entry
  function rankOf(uint256 index) public constant returns (uint256) {
    uint256 rank = 0;
    
    uint256 len = approved[index].length;
    for (uint256 i = 0; i < len; ++i) { 
      address voter = approved[index][i];
        
      // Checks if voter already voted
      // FIXME: this would be less stupid with an in-memory map, but how?
      bool voted = false;
      for (uint256 j = 0; j < i; ++j) {
        voted = voted || approved[index][j] == voter;
      }
      
      if (!voted) {
        rank += voter.balance;
      }
    }
    return rank;
  }
  
  // Returns the number of entries
  function entriesCount() public constant returns (uint256) {
      return entryHashes.length;
  }
  
  // Returns the hash of an entry
  function entryHash(uint256 index) public constant returns (bytes) {
      return entryHashes[index];
  }

  // Returns the name of an entry
  function entryName(uint256 index) public constant returns (bytes) {
      return entryNames[index];
  }

  // Returns the hash of an entry
  function entryDesc(uint256 index) public constant returns (bytes) {
      return entryDescs[index];
  }
  
}

// 0.4.18+commit.9cf6e910.Emscripten.clang
// 6060604052341561000f57600080fd5b6106e98061001e6000396000f3006060604052600436106100825763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416635612acce811461008757806358c9c0811461011457806382f68dc41461012a5780639878185e14610152578063ab4ccf0114610168578063b759f9541461017b578063d438035314610193575b600080fd5b341561009257600080fd5b61009d600435610268565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100d95780820151838201526020016100c1565b50505050905090810190601f1680156101065780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561011f57600080fd5b61009d600435610329565b341561013557600080fd5b61014060043561033f565b60405190815260200160405180910390f35b341561015d57600080fd5b61009d60043561044b565b341561017357600080fd5b610140610461565b341561018657600080fd5b610191600435610468565b005b341561019e57600080fd5b61019160046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506104c895505050505050565b61027061055c565b600380548390811061027e57fe5b90600052602060002090018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561031d5780601f106102f25761010080835404028352916020019161031d565b820191906000526020600020905b81548152906001019060200180831161030057829003601f168201915b50505050509050919050565b61033161055c565b600180548390811061027e57fe5b6000818152602081905260408120548190818080805b8484101561043f57600088815260208190526040902080548590811061037757fe5b600091825260208220015473ffffffffffffffffffffffffffffffffffffffff16935091508190505b8381101561041057818061040657506000888152602081905260409020805473ffffffffffffffffffffffffffffffffffffffff85169190839081106103e257fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16145b91506001016103a0565b811515610434578273ffffffffffffffffffffffffffffffffffffffff1631860195505b836001019350610355565b50939695505050505050565b61045361055c565b600280548390811061027e57fe5b6001545b90565b6000818152602081905260409020805460018101610486838261056e565b506000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff19163373ffffffffffffffffffffffffffffffffffffffff1617905550565b600180548082016104d98382610597565b60009283526020909220018480516104f59291602001906105bb565b505060028054600181016105098382610597565b60009283526020909220018380516105259291602001906105bb565b505060038054600181016105398382610597565b60009283526020909220018280516105559291602001906105bb565b5050505050565b60206040519081016040526000815290565b81548183558181151161059257600083815260209020610592918101908301610639565b505050565b81548183558181151161059257600083815260209020610592918101908301610653565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105fc57805160ff1916838001178555610629565b82800160010185558215610629579182015b8281111561062957825182559160200191906001019061060e565b50610635929150610639565b5090565b61046591905b80821115610635576000815560010161063f565b61046591905b8082111561063557600061066d8282610676565b50600101610659565b50805460018160011615610100020316600290046000825580601f1061069c57506106ba565b601f0160209004906000526020600020908101906106ba9190610639565b505600a165627a7a72305820317ece0503c3cdd5fb631dd6b6a16c9517b89f9bed52950ac1034402d3950d4b0029
// [{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"entryDesc","outputs":[{"name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"entryHash","outputs":[{"name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"rankOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"entryName","outputs":[{"name":"","type":"bytes"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"entriesCount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"index","type":"uint256"}],"name":"approve","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"hash","type":"bytes"},{"name":"name","type":"bytes"},{"name":"desc","type":"bytes"}],"name":"register","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]
